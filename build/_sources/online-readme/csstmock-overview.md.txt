# pipeline of CSSTMOCK


### make.python (run on gravity)

``` shell
module load compiler/intel-2018

cd libcsstmock
module load anaconda
source activate
conda deactivate
module load anaconda
source activate python3
python build.py
ifort -fPIC -shared -o libcsstmock.so io_jiutian.f libcsstplugin.a
export PYTHONPATH=$PYTHONPATH:$(pwd)
export LIBRARY_PATH=$LIBRARY_PATH:$(pwd)
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)
export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$(pwd)
cd ..

export PYTHONPATH=$PYTHONPATH:$pwd
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$pwd # 将库文件的路径添加进来
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)
export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$(pwd)

ifort *.f -lcsstmock
#ifort -O3 -L./geo3 -lplugin -L./libcsstmock -lcsstmock -fopenmp -parallel *.f
#gfortran -O3 -L./geo3 -lplugin -mcmodel=medium -fopenmp *.f

--f90flags

f2py -c -m myflib *.f -fopenmp

./a.out

```


### quickstart

``` python 
# comments: =================================================================================
# User-defined input  of observation: 
# Data format "obs_userdefined.npy (ngal, )": igal, a, d, z, zerr, mag, igrp, zgrp, mgrp

# User-defined intput of simulation: 
# Data format "zsnap_userdefined.npy (ngal, )": snapnum, redshift  
# Data format "sim[0-127]_userdefined.npy (ngal, )": isub, x, y, z, msub, ihal, mhal 

# output format: 
# 1) isub, msub, ihal, mhal, snapnum 
# 2) igal, a, d, z, 

from csstmock import mock
setup = {
observation = 'DESIDR9', # observation name (DESIDR9/SDSSDR7/CSST/)
magapp_limit=  21.0,     # apparent magnitude limit
zmin = 0.09,             # minimum redshift
zmax = 0.10,             # maximum redshift
simulation  = '9tian',   # simulation catalog name (9tian/Uchuu/Mill/ELUCID) 
rotate      =  0,        # rotate the simulation box N times
lumfunc = 'LF_sdss_Yang2009', # have luminosity function file? if no, extract from observation. 
output  = './'            # output catalog directory
geo = 'DESIDR9',          # sky-coverage (or completeness) type (ALL/DESIDR9/SDSSDR7/CSST)
random  = True,           # generate random sample (Y/N)
randomseed =  -98173219   # random seed
#500000000        # (No need) maximum number of subhalos to be read
#10               # (No need) column number of the input data
}

m = mock.run(setup)

# comments: =================================================================================
(1) observational data:
    Currently we only arranged the DESI-DR9 galaxy and group catalogs. 

(3) luminosity functions:

    We have LFs collected from the following studies.
    1. LF_sdss_Yang2009, the luminosity function obtained by Yang et al. 2009, ApJ, 695, 900, table 2. 
    2. N: we will directly calculate (cumulative) luminosity functions from the input galaxy catalog. 

(2) simulation data:
    We have galaxy catalogs at z=0.0, 0.5, 1.03, 2.03 and 3.93 for 'Uchuu' simulations.
    We have multi-redshift subhalo catalogs for '9tian' simulations.
    We have semi-analytical galaxy catalog at z=0.0 for 'Mill' millennium simulations.
    We have subhalo catalog at z=0.0 for 'ELUCID' simualtions.    


```

###

